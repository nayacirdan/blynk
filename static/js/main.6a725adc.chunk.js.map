{"version":3,"sources":["components/BlockContainer/BlockContainer.js","components/AddForm/AddForm.js","actions/constants.js","actions/creators.js","components/TaskItem/TaskItem.js","components/TaskList/TaskList.js","utils/todoUtil.js","components/Items/Items.js","components/CommentItem/CommentItem.js","components/CommentsList/CommentsList.js","components/Comments/Comments.js","components/Main/Main.js","components/Sidebar/Sidebar.js","App.js","serviceWorker.js","reducers/taskReducer.js","reducers/itemReducer.js","reducers/reducer.js","store/store.js","index.js"],"names":["BlockContainer","component","Col","lg","md","xs","className","AddForm","children","formClassName","formName","onSubmit","onKeyDown","Container","Row","name","Actions","GET_TODO_FROM_LS","ADD_NEW_ITEM","DELETE_ITEM","SET_CURRENT_ITEM","ADD_NEW_COMMENT","INCREASE_COMMENTS_COUNTER","ADD_COMMENT_TO_CURRENT","setCurrentItem","item","type","payload","TaskItem","text","comments","id","dispatch","useDispatch","currentItem","useSelector","state","allItems","tasks","handleDelete","deleteItem","key","onClick","ev","target","chooseItem","Badge","variant","length","Button","size","TaskList","listItems","map","ListGroup","Item","randomInteger","min","max","rand","Math","random","floor","Items","listItemsArr","handleSubmit","preventDefault","itemName","currentTarget","newItemName","value","itemId","commentsCounter","Form","Control","required","as","placeholder","CommentItem","color","style","backgroundColor","CommentsList","commentsList","Comments","commentText","newCommentText","commentColor","newCommentColor","formElem","ctrlKey","keyCode","submitBtn","click","ctrlEnter","defaultValue","Main","SideBar","connect","useEffect","getToDo","toDo","localStorage","getItem","window","addEventListener","setItem","JSON","stringify","Boolean","location","hostname","match","initialState","action","itemToDel","itemIndex","indexOf","update","$splice","parse","newComment","prevCommentsList","push","reducer","combineReducers","reduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","f","store","createStore","compose","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6a725adc.chunk.js","sourcesContent":["import React from 'react';\r\nimport Col from \"react-bootstrap/Col\";\r\nimport './BlockContainer.scss'\r\n\r\nconst BlockContainer = ({component}) => {\r\n    return (\r\n        <Col lg={5} md={5} xs={12} className='block-container'>\r\n            {component}\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default BlockContainer;\r\n","import React from 'react';\r\nimport './AddForm.scss'\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst AddForm = ({children, formClassName, formName, onSubmit, onKeyDown}) => {\r\n    return (\r\n        <Container className='add-form'>\r\n            <Row className='add-form__row'>\r\n                <Col lg={12} md={12} xs={12} className='add-form__col'>\r\n                    <form className={formClassName} name={formName} onSubmit={onSubmit} onKeyDown={onKeyDown}>\r\n                            <Row className='form-row'>\r\n                                {children}\r\n                            </Row>\r\n                    </form>\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default AddForm;\r\n","const Actions = {\r\n    GET_TODO_FROM_LS: 'GET_TODO_FROM_LS',\r\n    ADD_NEW_ITEM:'ADD_NEW_ITEM',\r\n    DELETE_ITEM:'DELETE_ITEM',\r\n    SET_CURRENT_ITEM:'SET_CURRENT_ITEM',\r\n    ADD_NEW_COMMENT:'ADD_NEW_COMMENT',\r\n    INCREASE_COMMENTS_COUNTER:'INCREASE_COMMENTS_COUNTER',\r\n    ADD_COMMENT_TO_CURRENT:'ADD_COMMENT_TO_CURRENT'\r\n};\r\n\r\nexport default Actions;","import Actions from \"./constants\";\r\n\r\nexport const getToDoFromLS=(toDoList)=>{\r\n    return {type:Actions.GET_TODO_FROM_LS, payload: toDoList}\r\n}\r\n\r\nexport const addItem=(item)=>{\r\n    return {type:Actions.ADD_NEW_ITEM, payload: item}\r\n}\r\nexport const deleteItem=(item)=>{\r\n    return {type:Actions.DELETE_ITEM, payload: item}\r\n}\r\n\r\nexport const setCurrentItem=(item)=>{\r\n    return {type:Actions.SET_CURRENT_ITEM, payload: item}\r\n}\r\nexport const addComment=(comment, currentItem)=>{\r\n    return {type:Actions.ADD_NEW_COMMENT, comment: comment, currentItem:currentItem}\r\n}\r\nexport const increaseCommentsCounter=(item)=>{\r\n    return {type:Actions.INCREASE_COMMENTS_COUNTER, payload:item};\r\n}\r\nexport const addCommentToCurrent=(comment)=>{\r\n    return {type:Actions.ADD_COMMENT_TO_CURRENT, payload:comment};\r\n}","import React from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport './TaskItem.scss'\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {deleteItem, setCurrentItem} from \"../../actions/creators\";\r\n\r\nconst TaskItem = ({item}) => {\r\n    const {text, comments, id}=item;\r\n    const dispatch=useDispatch();\r\n\r\n    const chooseItem=(item, ev)=>{\r\n        if(ev.target.name==='deleteTask') {\r\n            return false\r\n        }\r\n        dispatch(setCurrentItem(item));\r\n    }\r\n    const currentItem=useSelector(state=>state.item);\r\n    const allItems=useSelector(state=>state.tasks);\r\n    const handleDelete=()=>{\r\n\r\n        dispatch(deleteItem(item))\r\n\r\n        dispatch(setCurrentItem(allItems[0]||{}))\r\n    }\r\n    return (\r\n\r\n        <Container className={currentItem.id===id? 'task-item active':'task-item'}\r\n                   key={id}\r\n                   id={id}\r\n                   onClick={(ev)=>chooseItem(item, ev)}\r\n        >\r\n            <Col lg={6} md={6} className='task-item__text'>\r\n                {text}\r\n            </Col>\r\n            <Col lg={2} md={2} className='task-item__comment-counter'>\r\n                <Badge variant=\"info\">{comments.length || 0}</Badge>\r\n            </Col>\r\n            <Col lg={4} md={4} className='task-item__actions'>\r\n                <Button\r\n                    variant=\"outline-danger\"\r\n                    type='button'\r\n                    size=\"sm\"\r\n                    name='deleteTask'\r\n                    onClick={()=>handleDelete()}\r\n                >Delete</Button>\r\n            </Col>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default TaskItem;\r\n","import React from 'react';\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport TaskItem from \"../TaskItem/TaskItem\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst TaskList = () => {\r\n    const listItemsArr=useSelector((state)=>state.tasks);\r\n\r\n    const listItems = listItemsArr.map((item) => (\r\n        <ListGroup.Item className='list-item' key={item.id}>\r\n            <TaskItem item={item}/>\r\n        </ListGroup.Item>)\r\n    )\r\n    return (\r\n        <div className='list-container'>\r\n            <ListGroup>\r\n                {listItems}\r\n            </ListGroup>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskList;\r\n","export const randomInteger=(min, max)=> {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    return Math.floor(rand);\r\n}\r\n","import React from 'react';\r\nimport AddForm from \"../AddForm/AddForm\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport TaskList from \"../TaskList/TaskList\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport './Items.scss'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {randomInteger} from \"../../utils/todoUtil\"\r\nimport {addItem} from \"../../actions/creators\"\r\n\r\nconst Items = ({listItemsArr}) => {\r\n    const dispatch=useDispatch();\r\n\r\n    const handleSubmit=(ev)=>{\r\n        ev.preventDefault();\r\n        const itemName=ev.currentTarget.newItemName.value;\r\n        ev.currentTarget.newItemName.value=\"\";\r\n        const itemId=randomInteger(1000, 100000);\r\n        const newItem={\r\n            text:itemName,\r\n            id:itemId,\r\n            commentsCounter:0,\r\n            comments:[]\r\n        }\r\n        dispatch(addItem(newItem))\r\n    }\r\n\r\n    return (\r\n        <div className='items'>\r\n            <h2 className='comments__heading'>Items</h2>\r\n            <AddForm formClassName='add-new-items-form'\r\n                     formName='items-form'\r\n                     onSubmit={(ev)=>handleSubmit(ev)}\r\n                     children={[\r\n\r\n                         <Col lg={7} md={7} xs={7} key='col-input-items'>\r\n                             <Form.Control required as='input' placeholder='Type name here...' name='newItemName'/>\r\n                         </Col>,\r\n\r\n                         <Col lg={5} md={5} xs={5} className='last-col' key='col-btn-items'>\r\n                             <Button\r\n                                 className='btn btn-add-new btn-add-new--item'\r\n                                 variant='dark-primary'\r\n                                 value='Add New'\r\n                                 type='submit'>\r\n                                 Add New\r\n                             </Button>\r\n                         </Col>\r\n\r\n                     ]}/>\r\n            <TaskList listItemsArr={listItemsArr}/>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Items;\r\n","import React from 'react';\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nconst CommentItem = ({text, color}) => {\r\n    return (\r\n        <Container className='comment-item'>\r\n            <Row>\r\n                <Col lg={2} md={2} className='comment-item__color' style={{backgroundColor:color}}>\r\n\r\n                </Col>\r\n                <Col lg={10} md={10} className='comment-item__text-field'>\r\n                    {text || 'mysometext'}\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CommentItem;\r\n","import React from 'react';\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport CommentItem from \"../CommentItem/CommentItem\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {randomInteger} from \"../../utils/todoUtil\";\r\n\r\nconst CommentsList = () => {\r\n    const commentsList=useSelector(state=>state.item.comments);\r\n\r\n    let listItems='No comments now'\r\n    if (commentsList && commentsList.length>0){\r\n        listItems= commentsList.map((item) => (\r\n            <ListGroup.Item key={randomInteger(1000, 9999999)}>\r\n                <CommentItem text={item.text} color={item.color}/>\r\n            </ListGroup.Item>)\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='list-container'>\r\n            <ListGroup>\r\n                {listItems}\r\n            </ListGroup>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommentsList;\r\n","import React from 'react';\r\nimport CommentsList from \"../CommentsList/CommentsList\";\r\nimport AddForm from \"../AddForm/AddForm\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport './Comments.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addCommentToCurrent} from \"../../actions/creators\";\r\n\r\nconst Comments = () => {\r\n\r\n    const currentItem=useSelector(state=>state.item);\r\n    const dispatch=useDispatch();\r\n\r\n    const handleSubmit=(ev)=>{\r\n        ev.preventDefault();\r\n        const commentText=ev.currentTarget.newCommentText.value;\r\n        const commentColor=ev.currentTarget.newCommentColor.value;\r\n        ev.currentTarget.newCommentText.value=\"\";\r\n        ev.currentTarget.newCommentColor.value=\"#000000\";\r\n        const newComment={\r\n            color: commentColor,\r\n            text: commentText\r\n        }\r\n\r\n        dispatch(addCommentToCurrent(newComment));\r\n\r\n    }\r\n\r\n    const ctrlEnter=(ev)=>{\r\n        const formElem=ev.currentTarget;\r\n        if(ev.ctrlKey && ev.keyCode === 13)\r\n        {\r\n            formElem.submitBtn.click();\r\n        }\r\n    }\r\n    return (\r\n        <div className='comments'>\r\n            <h2 className='comments__heading'>Comments #{currentItem.id||''}</h2>\r\n            <CommentsList/>\r\n            <AddForm\r\n                formClassName='add-new-comment-form'\r\n                formName='comments-form'\r\n                onSubmit={(ev)=>handleSubmit(ev)}\r\n                onKeyDown={(ev)=>ctrlEnter(ev)}\r\n                children={[\r\n\r\n                <Col lg={2} md={2} xs={2} key='col-color-comments'>\r\n                    <input type='color' defaultValue=\"#000000\" name='newCommentColor'/>\r\n                </Col>,\r\n\r\n                <Col lg={6} md={6} xs={6} key='col-textarea-comments'>\r\n                    <Form.Control\r\n                        required\r\n                        as='textarea'\r\n                        placeholder='Enter your comment here'\r\n                        name='newCommentText'\r\n                        defaultValue=''></Form.Control>\r\n                </Col>,\r\n\r\n                <Col lg={4} md={4} xs={4} key='col-btn-comments'>\r\n                    <Button\r\n                        variant='dark-primary'\r\n                        className='btn btn-add-new btn-add-new--comment'\r\n                        value='Add New'\r\n                        type='submit'\r\n                    name='submitBtn'>\r\n                        Add New\r\n                    </Button>\r\n                </Col>\r\n\r\n            ]}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comments;\r\n","import React from 'react';\r\nimport BlockContainer from \"../BlockContainer/BlockContainer\";\r\nimport Items from \"../Items/Items\";\r\nimport Comments from \"../Comments/Comments\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport './Main.scss'\r\n\r\nconst Main = () => {\r\n    return (\r\n        <Col lg={10} md={10} xs={12} className='main'>\r\n            <Container className='main__container'>\r\n                <Row className='main__row'>\r\n                    <BlockContainer key='items-block' component={<Items/>}/>\r\n                    <BlockContainer key='comments-block' component={<Comments/>}/>\r\n                </Row>\r\n            </Container>\r\n\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport Col from \"react-bootstrap/Col\";\r\nimport './Sidebar.scss'\r\nimport Container from \"react-bootstrap/Container\";\r\nconst SideBar = () => {\r\n    return (\r\n        <Col lg={2} md={2} xs={12} className='sidebar'>\r\n            <Container>\r\n                <h1 className='sidebar__logo'>Dayry App</h1>\r\n                <span className='sidebar__promo'>Comment whit no sense</span>\r\n            </Container>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default SideBar;\r\n","import React, {useEffect} from 'react';\nimport './App.scss';\nimport Main from \"./components/Main/Main\";\nimport SideBar from \"./components/Sidebar/Sidebar\";\nimport Row from \"react-bootstrap/Row\";\nimport {connect, useDispatch} from \"react-redux\";\nimport {getToDoFromLS, setCurrentItem} from \"./actions/creators\"\n\nconst App = ({tasks}) => {\n\n    const dispatch=useDispatch();\n\n\n        useEffect(()=>{\n            if (!tasks || !tasks.length) {\n                dispatch(setCurrentItem({}))\n            }\n        },[])\n\n\n    const getToDo=()=>{\n        const toDo=localStorage.getItem('TODO');\n        if(toDo && toDo !=='[]') {\n            dispatch(getToDoFromLS(toDo)); //\n        }\n    };\n\n    useEffect(() => {\n        getToDo();\n    }, []);\n\n\n\n    window.addEventListener(\"beforeunload\", (ev) =>\n    {\n        ev.preventDefault();\n        localStorage.setItem('TODO', JSON.stringify(tasks));\n        return 'String for browsers without preventDefault activation'\n    });\n\n\n\n\n    return (\n        <div className=\"App\">\n            <Row className='app-row'>\n                <SideBar/>\n                <Main/>\n            </Row>\n        </div>\n    );\n}\nconst mapStoreToProps=(state)=>{\n    return {\n        tasks: state.tasks\n    }\n}\n\nexport default connect(mapStoreToProps,null)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import Actions from \"../actions/constants\";\r\nimport update from \"react-addons-update\";\r\n\r\nconst initialState=[];\r\n\r\nconst tasks=(state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case Actions.ADD_NEW_ITEM: {\r\n            return [...state, action.payload]\r\n        }\r\n        case Actions.DELETE_ITEM:{\r\n            const itemToDel=action.payload;\r\n            const itemIndex=state.indexOf(itemToDel);\r\n            return update(state, {$splice: [[itemIndex, 1]]});\r\n        }\r\n        case Actions.GET_TODO_FROM_LS:{\r\n            return JSON.parse(action.payload);\r\n        }\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\n\r\nexport default tasks;","import Actions from \"../actions/constants\";\r\n\r\nconst initialState={}\r\n\r\nconst item=(state=initialState, action)=>{\r\n    switch (action.type) {\r\n        case Actions.SET_CURRENT_ITEM:{\r\n            return action.payload\r\n        }\r\n        case Actions.ADD_COMMENT_TO_CURRENT:{\r\n            const newComment=action.payload;\r\n            const prevCommentsList=state.comments;\r\n            prevCommentsList.push(newComment);\r\n            return {...state, comments:prevCommentsList}\r\n        }\r\n        default: return state\r\n    }\r\n\r\n}\r\n\r\nexport default item","import {combineReducers} from \"redux\";\r\nimport tasks from \"./taskReducer\";\r\nimport item from \"./itemReducer\";\r\n\r\n\r\nconst reducer=combineReducers({\r\n    tasks, item\r\n})\r\n\r\nexport default reducer;","import reducer from \"../reducers/reducer\";\r\nimport {compose, createStore} from \"redux\";\r\n\r\n\r\nconst reduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f;\r\n\r\nconst store = createStore(reducer,\r\n    compose(reduxDevTools)\r\n);\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from './store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n    <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}